generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String       @db.VarChar(255)
  email       String       @unique @db.VarChar(255)
  password    String       @db.VarChar(255)
  birthDate   DateTime     @db.Date
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  enrollments Enrollment[]

  @@map("usuarios")
}

model Course {
  id                  String       @id @default(uuid())
  name                String       @db.VarChar(255)
  description         String?      @db.Text
  cover               String?      @db.VarChar(500)
  enrollmentsCount    Int          @default(0)
  startDate           DateTime?     @db.Date
  isEnrolled          Boolean      @default(false)
  enrollmentCancelled Boolean      @default(false)
  createdAt           DateTime     @default(now()) @map("created_at")
  updatedAt           DateTime     @updatedAt @map("updated_at")
  userEnrollments     Enrollment[]

  @@map("cursos")
}

model Enrollment {
  id                   String   @id @default(uuid())
  userId               String
  courseId             String
  isEnrollmentCanceled Boolean  @default(false) @map("inscricao_cancelada")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  course               Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([userId, courseId])
  @@map("inscricoes")
}
